rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false
    }
    match /users/{userId} {
      allow write: if (request.auth.uid == userId)
    }

    match /posts/{postId} {
      allow read: if true
      allow update: if (resource.data.authorId == request.auth.uid) ||
        (request.auth.token.canModerate)
    }
     
    match /goals/{goalsId} {
      allow read, write: if true

      match /battles/{battleId} {
        allow read, write: if true
      }
    }

    match /revisions/{revisionId} {
      allow read, create: if true

      match /battles/{battleId} {
        allow read, create: if true
      }
    }

    match /maps/{mapId} {
      allow read, write, update: if true
      match /players/{playerId} {
         allow read, write, update: if true
      }
    }

    match /players/{playerId} {
      allow read, write, update: if true
    }

    match /activities/{acitivtyId} {
      allow read: if (resource.data.visibility == "public") ||
        (request.auth.token.canModerate)
      allow write, update: if (request.auth.token.canModerate)
    }

    match /path/{userId} {
      allow read: if (request.auth.uid == userId)
    }

    match /triggers/{triggerId} {
      allow read, write, update: if (request.auth.token.canDebugDevelopment)
    }

    match /feedback/{feedbackId} {
      allow create: if (!("canDebugDevelopment" in request.resource.data) || !("canModerate" in request.resource.data))
      allow read: if (request.auth.token.canModerate)
    }
    match /battleResult/{battleResultId} {
      allow create: if (!("canDebugDevelopment" in request.resource.data) || !("canModerate" in request.resource.data))
      allow read: if (request.auth.token.canModerate)
    }
  }
}
